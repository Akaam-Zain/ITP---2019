
@model Inventory_management.Models.user

@{
    ViewBag.Title = "User Registration";
    Layout = "~/Views/Shared/userView/login.cshtml";
}


<div class="signup-form">


    @using (Html.BeginForm("addOrEdit", "user", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <div class="form-header">
                <h2>User Registration</h2>
                <p> Welcome to the SKY Gym </p>
            </div>


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.fname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.lname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.password_, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.password_, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.password_, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    Male    @Html.RadioButtonFor(model => model.gender, "Male", new { @class = "radio" })
                    Female  @Html.RadioButtonFor(model => model.gender, "Female", new { @class = "radio" })
                    @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ocp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ocp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ocp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.weight_, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weight_, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weight_, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.height, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.height, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.height, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.shedule, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.shedule, new List<SelectListItem> {
                        new SelectListItem {Text="Weight loss - 30 Days", Value="D30" },
                        new SelectListItem {Text="Cardio - 40 Days", Value="D40" },
                        new SelectListItem {Text="Muscle gain - 45 Days", Value="D45" },
                        new SelectListItem {Text="Calisthenics - 50 Days", Value="D50" }
                    }, "Select Shedule", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.shedule, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.d_plan, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.d_plan, new List<SelectListItem> {
                        new SelectListItem {Text="WeightLoss", Value="L1" },
                        new SelectListItem {Text="Muscle Building", Value="L2" },
                        new SelectListItem {Text="Athlete", Value="L3" },
                        new SelectListItem {Text="Cardio / Calisthenics", Value="L4" }
               }, "Select Dietary Plan", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.d_plan, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.pay_type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.pay_type, new List<SelectListItem> {
                        new SelectListItem {Text="1 Month", Value="1 Month" },
                        new SelectListItem {Text="3 Months", Value="3 Months" },
                        new SelectListItem {Text="1 Year", Value="1 Year" }
               }, "Select Payment Method", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.pay_type, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Register" class="btn btn-default" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <label class="control-label lbl">@Html.ActionLink("Sign in", "../Login/Login")</label>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <label class="label-success">@ViewBag.SuccessMessage</label>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <label class="label-danger">@ViewBag.DuplicateMsg</label>
                </div>
            </div>

        </div>

    }

</div>

@Scripts.Render("~/bundles/jquery")

@Scripts.Render("~/Scripts/bootstrap.min.js")
@*@Scripts.Render("~/Scripts/jquery-1.10.2.min.js")*@
@*@Scripts.Render("~/Scripts/jquery-3.1.1.min.js")*@
@*@Scripts.Render("~/Scripts/jquery-3.4.1.intellisense.js")*@
@Scripts.Render("~/Scripts/jquery.validate.min.js")
@Scripts.Render("~/Scripts/jquery.validate.unobtrusive.min.js")


@*<script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery-1.10.2.intellisense.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@
